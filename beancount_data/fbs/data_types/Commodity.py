# automatically generated by the FlatBuffers compiler, do not modify

# namespace: data_types

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class Commodity(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = Commodity()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsCommodity(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # Commodity
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Commodity
    def Currency(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def CommodityStart(builder):
    builder.StartObject(1)

def Start(builder):
    CommodityStart(builder)

def CommodityAddCurrency(builder, currency):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(currency), 0)

def AddCurrency(builder, currency):
    CommodityAddCurrency(builder, currency)

def CommodityEnd(builder):
    return builder.EndObject()

def End(builder):
    return CommodityEnd(builder)
